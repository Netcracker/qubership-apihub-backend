openapi: 3.0.3
info:
  title: APIHUB system administrators API
  description: |
    The API is for system administrators only.
  license:
    name: qubership
    url: https://qubership.org
  version: "2024.2"
  x-api-audience: external
  x-nc-api-audience: BWC
externalDocs:
  description: Find out more about package
  url: https://qubership.org/APIHUB
servers:
  - url: https://{apihub}.qubership.org
    description: APIHUB server
    variables:
      apihub:
        description: Name of the APIHUB server.
        enum:
          - apihub
          - dev.apihub
          - staging.apihub
        default: apihub
security:
  - BearerAuth: []
  - CookieAuth: []
tags:
  - name: Roles
    description: APIs for role management.

paths:
  "/api/v2/admins":
    post:
      x-nc-api-audience: noBWC
      tags:
        - Roles
      summary: Add a system administrator
      description: |
        Add an existing user as a system administrator.
      operationId: postAdmins
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
              properties:
                userId:
                  description: Login of the user.
                  type: string
                  example: user1221
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  admins:
                    description: List of system administrators.
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    get:
      x-nc-api-audience: noBWC
      tags:
        - Roles
      summary: Get list of system administrators
      description: Get list of system administrators.
      operationId: getAdmins
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  admins:
                    description: List of system administrators.
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/admins/{userId}":
    delete:
      x-nc-api-audience: noBWC
      tags:
        - Roles
      summary: Delete system administrator
      description: Delete a user from the system administrators group.
      operationId: deleteAdminsId
      parameters:
        - name: userId
          description: Login of the user.
          in: path
          required: true
          schema:
            type: string
            example: user1221
      responses:
        "204":
          description: No content
          content: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/roles":
    post:
      tags:
        - Roles
      summary: Create a new role
      description: |
        Create a new role with the set of available permissions for this role.

        The role may be assigned to the user for the specific package.

        The "read content of public packages" permissions is applied for all roles by default (except the private packages with default role = **none**).
      operationId: postRoles
      requestBody:
        description: Role creation parameters
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoleCreate"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/Role"
                  - type: object
                    properties:
                      permissions:
                        type: array
                        description: List of permissions applicable to the role.
                        items:
                          $ref: "#/components/schemas/Permission"
                        example: ["read", "create_and_update_package", "delete_package"]
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    get:
      tags:
        - Roles
      summary: Get list of existing roles
      description: List of all roles and their permissions.
      operationId: getRoles
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    description: List of existing roles.
                    type: array
                    items:
                      allOf:
                        - $ref: "#/components/schemas/Role"
                        - type: object
                          properties:
                            readOnly:
                              description: |
                                A flag that indicates an immutability of a role. readOnly roles cannot be changed or deleted.
                              type: boolean
                              default: false
                            permissions:
                              type: array
                              description: List of permissions applicable to the role.
                              items:
                                $ref: "#/components/schemas/Permission"
                              example: ["read", "create_and_update_package", "delete_package"]
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/api/v2/roles/{roleId}":
    parameters:
      - name: roleId
        in: path
        required: true
        description: Role identifier.
        schema:
          type: string
          pattern: "^[a-z0-9-]"
          example: editor
    patch:
      tags:
        - Roles
      summary: Update role
      description: |
        Change role parameters.

        If the parameter is not transmitted in the request, its value remains unchanged.

        Read only roles can't be updated.
      operationId: patchRolesId
      requestBody:
        description: Role update parameters.
        content:
          application/json:
            schema:
              type: object
              required:
                - permissions
              properties:
                permissions:
                  description: |
                    List of role permissions.
                    Current role permissions will be replaced by the transmitted list.
                  type: array
                  items:
                    $ref: "#/components/schemas/Permission"
                  example: ["read", "create_and_update_package", "delete_package"]
      responses:
        "204":
          description: No content
          content: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
    delete:
      tags:
        - Roles
      summary: Delete role
      description: |
        Delete a role with its permissions.

        When the role is deleted, all users with that role shall be removed from packages.

        Roles with **readOnly:true** flag can't be deleted.
      operationId: deleteRolesId
      responses:
        "204":
          description: No content
          content: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/roles/changeOrder":
    post:
      tags:
        - Roles
      summary: Update the roles order
      description: |
        Update the roles order.

        The list of roles will be replaced, all existing roles are required in request (return an error otherwise).
      operationId: postRolesChangeOrder
      requestBody:
        description: Roles list
        content:
          application/json:
            schema:
              type: object
              description: List of roles.
              required:
                - roles
              properties:
                roles:
                  type: array
                  items:
                    type: string
                  example: [admin, owner, editor, viewer, none]
      responses:
        "204":
          description: No content
          content: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  "/api/v2/permissions":
    get:
      tags:
        - Roles
      summary: Get list of permissions
      description: List of all permissions.
      operationId: getPermissions
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  permissions:
                    description: List of available permissions.
                    type: array
                    items:
                      type: object
                      properties:
                        permission:
                          $ref: "#/components/schemas/Permission"
                        name:
                          type: string
                          description: Name of the permission
                          example: Read content of public package
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    User:
      description: APIHUB user
      type: object
      required:
        - id
      properties:
        id:
          description: Login of the user
          type: string
          example: user1221
        name:
          description: Name of the user
          type: string
          example: "Name Surname"
        email:
          description: Email address of the user
          type: string
          format: email
          example: "name.surname@qubership.org"
        avatarUrl:
          description: Avatar of the user
          type: string
          format: URL
    RoleCreate:
      description: Role with set of permissions for creation.
      type: object
      title: Role
      required:
        - role
        - permissions
      properties:
        role:
          type: string
          pattern: "^[a-zA-Z0-9- ]"
          description: Role name.
          example: Editor
        permissions:
          type: array
          description: List of permissions applicable to the role.
          items:
            $ref: "#/components/schemas/Permission"
          example: ["read", "create_and_update_package", "delete_package"]
    Role:
      description: Role details.
      type: object
      title: Role
      required:
        - roleId
        - role
        - permissions
      properties:
        roleId:
          type: string
          description: Unique role identifier. The value is the slug of role name.
          example: editor
        role:
          type: string
          description: Role name.
          example: Editor
    Permission:
      description: Permission
      type: string
      enum:
        - read
        - create_and_update_package
        - delete_package
        - manage_draft_version
        - manage_release_version
        - manage_archived_version
        - user_access_management
        - access_token_management
      example: read
    ErrorResponse:
      description: An error description
      type: object
      properties:
        status:
          description: HTTP Status Code
          type: number
        code:
          description: Internal string error code. Mandatory in response.
          type: string
        message:
          description: The attribute contains an error message.
          type: string
        params:
          type: object
          description: Message parameters
          example:
            id: 12345
            type: string
        debug:
          description: The attribute contains debug details (e.g. stack-trace). Presented in the error response only on Dev/Test environments if corresponding logging level is enabled.
          type: string
      required:
        - status
        - code
        - message
  examples:
    IncorrectInputParameters:
      description: Incorrect input parameters
      value:
        status: 400
        code: "APIHUB-COMMON-4001"
        message: "Incorrect input parameters"
    InternalServerError:
      description: Default internal server error
      value:
        status: 500
        code: "APIHUB-8000"
        reason: "InternalServerError"
        message: "InternalServerError"
  securitySchemes:
    BearerAuth:
      type: http
      description: Bearer token authentication. Default secutity scheme for API usage.
      scheme: bearer
      bearerFormat: JWT
    CookieAuth:
      type: apiKey
      in: cookie
      name: apihub-access-token
      description: Authentication via the `apihub-access-token` cookie.
    api-key:
      type: apiKey
      description: Api-key authentication.
      name: api-key
      in: header

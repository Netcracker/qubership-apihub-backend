version: '3.9'
services:
    qubership-apihub-build-task-consumer:
        image: ghcr.io/netcracker/qubership-apihub-build-task-consumer:dev
        container_name: qubership-apihub-build-task-consumer
        network_mode: host
        env_file: "qubership-apihub-build-task-consumer.env"
        healthcheck:
            test: [ "CMD-SHELL", "curl --silent --fail localhost:8080/swagger || exit 1" ]
            interval: 120s
            timeout: 60s
            retries: 10
            start_period: 5s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '1'
                    memory: 2G

    qubership-apihub-ui:
        image: ghcr.io/netcracker/qubership-apihub-ui:dev
        container_name: qubership-apihub-ui
        network_mode: host
        env_file: "qubership-apihub-ui.env"
        healthcheck:
            test: [ "CMD-SHELL", "curl --silent --fail localhost:8080/probes/live || exit 1" ]
            interval: 10s
            timeout: 10s
            retries: 10
            start_period: 5s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '0.5'
                    memory: 500M

    ###### 3rd party services
    
    postgres:
        image: docker.io/postgres
        container_name: postgres
        command:
            - "postgres"
            - "-c"
            - "max_connections=50"
            - "-c"
            - "shared_buffers=1GB"
            - "-c"
            - "effective_cache_size=1GB"
            - "-c"
            - "work_mem=16MB"
            - "-c"
            - "maintenance_work_mem=512MB"
            - "-c"
            - "random_page_cost=1.1"
            - "-c"
            - "temp_file_limit=10GB"
            - "-c"
            - "log_min_duration_statement=200ms"
            - "-c"
            - "idle_in_transaction_session_timeout=10s"
            - "-c"
            - "lock_timeout=1s"
            - "-c"
            - "shared_preload_libraries=pg_stat_statements"
            - "-c"
            - "pg_stat_statements.max=10000"
            - "-c"
            - "pg_stat_statements.track=all"
        environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=postgres
        - PGDATA=/C/pg-docker/data
        ports:
        - 5432:5432
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready -U postgres" ]
            interval: 10s
            timeout: 15s
            retries: 15
            start_period: 5s
        restart: unless-stopped
        deploy:
            resources:
                limits:
                    cpus: '1'
                    memory: 3G
        volumes:
        - '.:/var/lib/postgresql/data:Z'
        - './scripts/init-db:/docker-entrypoint-initdb.d'


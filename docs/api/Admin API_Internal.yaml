openapi: 3.0.3
info:
  title: APIHUB system administrators API
  description: |
    The API is for system administrators only.
  license:
    name: qubership
    url: https://qubership.org
  version: "2024.2"
  x-api-audience: internal
  x-nc-api-audience: BWC
externalDocs:
  description: Find out more about package
  url: https://qubership.org/APIHUB
servers:
  - url: https://{apihub}.qubership.org
    description: APIHUB server
    variables:
      apihub:
        description: Name of the APIHUB server.
        enum:
          - apihub
          - dev.apihub
          - staging.apihub
        default: apihub
security:
  - BearerAuth: []
  - CookieAuth: []
tags:
  - name: Transition
    description: Operations to move packages
  - name: Publish
    description: Publish version API
  - name: Users
    description: APIs for the user operations.
  - name: Admin
    description: APIs for technical administration.
paths:
  "/api/v2/admin/transition/move":
    post:
      tags:
        - Transition
      summary: Move package
      description: Change package id, i.e. rename it or change parent. Async operation, result is returned by id.
      operationId: movePackage
      security:
        - BearerAuth: []
        - CookieAuth: []
        - api-key: []
      requestBody:
        description: Package coordinates
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                  description: package id that needs to be moved
                to:
                  type: string
                  description: destination package id
                overwriteHistory:
                  type: boolean
                  description: Enable force move for already used 'old' package id(which now redirects to some new one). In this case existing transition record will be lost and there would be no more redirect.
            examples: {}
        required: true

      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Move package response
                type: object
                properties:
                  id:
                    description: Move process id
                    type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found or incorrect 'from' ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"

  /api/v2/admin/transition/move/{id}:
    get:
      tags:
        - Transition
      summary: Get move status
      description: |
        Get status of the move operation by id.
      operationId: getMoveStatus
      security:
        - BearerAuth: []
        - CookieAuth: []
        - api-key: []
      parameters:
        - name: id
          description: Move operation id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransitionStatus"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "404":
          description: Not found or incorrect ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"

  /api/v2/admin/transition/activity:
    get:
      tags:
        - Transition
      summary: List completed transition activities
      description: |
        List completed transition activities
      operationId: listActivities
      security:
        - BearerAuth: []
        - CookieAuth: []
        - api-key: []
      parameters:
        - name: offset
          in: query
          description: Transition activities offset
          schema:
            type: number
            default: 0
        - name: limit
          in: query
          description: Maximun items in response
          schema:
            type: number
            default: 100
            maximum: 100
            minimum: 1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Transition activities list
                type: object
                properties:
                  changes:
                    type: array
                    items:
                      $ref: "#/components/schemas/TransitionStatus"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  /api/v2/admin/transition:
    get:
      tags:
        - Transition
      summary: List transitions
      description: |
        List full transition mapping
      operationId: listPackageTransitions
      security:
        - BearerAuth: []
        - CookieAuth: []
        - api-key: []
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: Transition activities list
                type: object
                properties:
                  changes:
                    type: array
                    items:
                      type: object
                      properties:
                        oldPackageId:
                          description: Package id that was before transition
                          type: string
                        newPackageId:
                          description: New package id after transition
                          type: string
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/internal/users":
    post:
      x-nc-api-audience: noBWC
      tags:
        - Users
        - Admin
      summary: Create internal user
      description: |
        Creation of the internal user, not connected to LDAP or GitLab.
        * If the userId already exists, return an error.
        * One email may be connected to several users at one time, no unique constraint.
        * The password will be stored in an encrypted form locally.
      operationId: postUsers
      security: [{}]
      requestBody:
        description: User for creation
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  description: Email address of the user
                  type: string
                  format: email
                  example: "name.surname@qubership.org"
                name:
                  description: Name of the user
                  type: string
                  example: "Name Surname"
                password:
                  type: string
                  description: User password.
                  format: password
                privateWorkspaceId:
                  type: string
                  description: PackageId for personal private workspace
        required: true
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
              examples: {}
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/builders/{builderId}/tasks":
    parameters:
      - $ref: "#/components/parameters/builderId"
    post:
      tags:
        - Publish
        - Admin
      summary: Assign build task to Builder
      description: |
        Returns empty response 204 (in case of no free build task to assign) or multipart form (src+config, matching current start build payload)
      operationId: postBuilderIdTasks
      security:
        - BearerAuth: []
        - CookieAuth: []
        - api-key: []
      responses:
        "200":
          description: Build task assigned
          content:
            application/zip:
              schema:
                type: object
                properties:
                  sources/:
                    type: string
                    description: |
                      Folder with source files for publish.
                      **Required**, if the buidType = buid and "files" array is filled in config.
                    format: binary
                  config.json:
                    oneOf:
                      - $ref: "#/components/schemas/PublishBuildConfig"
                      - $ref: "#/components/schemas/ExportVersionBuildConfig"
                      - $ref: "#/components/schemas/ExportRestDocumentBuildConfig"
                      - $ref: "#/components/schemas/ExportRestOperationsGroupBuildConfig"
                    discriminator:
                      propertyName: buildType
        "204":
          description: No content
          content: {}
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "410":
          description: Gone
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples: {}
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v2/businessMetrics":
    get:
      tags:
        - Admin
      summary: Get business metrics report
      description: |
        Returns collected business metrics
      operationId: getBusinessMetrics
      security:
        - BearerAuth: []
        - CookieAuth: []
        - api-key: []
      parameters:
        - name: format
          description: Response format
          in: query
          required: false
          schema:
            type: string
            default: json
            enum:
            - json
            - xlsx
        - name: parentPackageId
          description: Return business metrics only for specific group\workspace
          in: query
          required: false
          schema:
            type: string
            example: SD
        - name: hierarchyLevel
          description: Number of hierarchy levels for grouping packages (level=0 - packageId="SD.TL.TLQSS", level=1 - packageId="SD", level=2 - packageId="SD.TL")
          in: query
          required: false
          schema:
            type: integer
            default: 0
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                description: List of collected business metrics grouped by package
                type: array
                items:
                  $ref: "#/components/schemas/BusinessMetric"
            application/octet-stream:
              schema:
                type: string
                format: binary
                description: xlsx file to download
          headers:
            Content-Disposition:
              schema:
                type: string
                description: xlsx file name (only filled when format=xlsx)
                example: attachment; filename="business_metrics_2023-12-31.xlsx"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
  "/api/v3/packages/{packageId}/publish/{publishId}/status":
    parameters:
      - $ref: "#/components/parameters/packageId"
      - name: publishId
        description: Publish Id
        in: path
        required: true
        schema:
          type: string
          format: uuid
          example: 9c8e9045-dd9c-4946-b9e4-e05e3f41c4cc
    post:
      x-nc-api-audience: noBWC
      tags:
        - Publish
        - Admin
      summary: Store publish status
      description: Store publish status and result.
      operationId: postPackagesIdPublishIdStatusV3
      security:
        - BearerAuth: []
        - CookieAuth: []
        - api-key: []
      requestBody:
        description: |
          Store build result, depending on the process status.
          * **running** - build in progress, data object is not transmitted.
          * **error** - build process will send a the list of errors.
          * **complete** - build process will send a result in a ZIP archive.

          ZIP archive with build result can contain folders with sources, builded documents and JSON operation files. In addition, several config files are provided. The structure of these files is described in buildResult schema.
          There are following build types:
            - build - build process for version publication. It consist of contract and operations build and validation, calculation of the changelog, creation of the final version of the published contracts.
            - changelog - only the changelog calculation, no API contracts version will be created. Both version and previousVersion fields *must* contain @<revision> suffix when using changelog buildType.
            - reducedSourceSpecifications - proccess that finds source specifications for all operations from operation group and removes from these specifications operations other than those that are included into operation group.
            - mergedSpecification - process the merges all operations from an operation group into one specification.
            - exportVersion - process of exporting all documents from the package version.
            - exportRestDocument - process of exporting one OpenAPI document form the version.
            - exportRestOperationsGroup - process of exporting one operations group with apiType = rest.
          There are no any config files in buid result archive for exportVersion/exportRestDocument/exportRestOperationsGroup build types, i.e. only the resulting build files will be in the archive.
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - status
                - builderId
              properties:
                data:
                  oneOf:
                    - $ref: "#/components/schemas/BuildResult"
                    - $ref: "#/components/schemas/BuildErrors"
                status:
                  description: Build process result status.
                  type: string
                  enum:
                    - running
                    - error
                    - complete
                builderId:
                  description: Builder identifier.
                  type: string
      responses:
        "204":
          description: No content
          content: {}
        "301":
          description: Moved Permanently
          headers:
            Location:
              schema:
                type: string
              description: Current ednpoint with new packageId of moved package
            X-New-Package-Id:
              schema:
                type: string
              description: New packageId of moved package
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                IncorrectInputParams:
                  $ref: "#/components/examples/IncorrectInputParameters"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
              examples:
                InternalServerError:
                  $ref: "#/components/examples/InternalServerError"
components:
  parameters:
    builderId:
      name: builderId
      in: path
      description: Builder unique identifier (UUID)
      required: true
      schema:
        type: string
        format: UUID
        example: QS.CloudQSS.CPQ.Q-TMF
    packageId:
      name: packageId
      in: path
      description: Package unique identifier (full alias)
      required: true
      schema:
        type: string
        example: QS.CloudQSS.CPQ.Q-TMF
  schemas:
    ErrorResponse:
      description: An error description
      type: object
      properties:
        status:
          description: HTTP Status Code
          type: number
        code:
          description: Internal string error code. Mandatory in response.
          type: string
        message:
          description: The attribute contains an error message.
          type: string
        params:
          type: object
          description: Message parameters
          example:
            id: 12345
            type: string
        debug:
          description: The attribute contains debug details (e.g. stack-trace). Presented in the error response only on Dev/Test environments if corresponding logging level is enabled.
          type: string
      required:
        - status
        - code
        - message
    TransitionStatus:
      type: object
      properties:
        id:
          type: string
          description: Move operation id
        trType:
          type: string
          description: Transition type
        fromId:
          type: string
          description: Source package id
        toId:
          type: string
          description: Destination package id
        status:
          type: string
          description: Operation status
        startedBy:
          type: string
          description: User who started the operation
        startedAt:
          type: string
          description: Time when the operation was started
        finishedAt:
          type: string
          description: Time when the operation was finished
        progressPercent:
          type: integer
          format: int32
          description: Percent of complete. Values 0-100
        affectedObjects:
          type: integer
          format: int32
          description: Number of affected rows in DB
        completedSerialNumber:
          type: integer
          format: int32
          description: Serial number of completed transition
    User:
      description: APIHUB user
      type: object
      required:
        - id
      properties:
        id:
          description: Login of the user
          type: string
          example: user1221
        name:
          description: Name of the user
          type: string
          example: "Name Surname"
        email:
          description: Email address of the user
          type: string
          format: email
          example: "name.surname@qubership.org"
        avatarUrl:
          description: Avatar of the user
          type: string
          format: URL
    PublishBuildConfig:
      type: object
      description: | 
        Configuration for publication process.\
        Files or/and Refs are **required**.
      required:
        - version
        - status
      properties:
        buildType:
          description: |
            Type of the build process.
            "build" type means version publication process.
          type: string
          enum:
            - build
        version:
          description: Version name for publication.
          type: string
          example: "2022.3"
        previousVersion:
          description: Name of the previous published version.
          type: string
          example: "2022.2"
          default: ""
        previousVersionPackageId:
          description: Previous release version package id.
          type: string
          example: "QS.CQSS.CPQ.TMF"
        status:
          $ref: "#/components/schemas/VersionStatusEnum"
        versionLabels:
          description: List of version labels.
          type: array
          items:
            type: string
          example: ["part-of:CloudQSS-CPQBE"]
        files:
          description: |
            Detailed data about files in sources archive.
            Required in no Refs are provided.
          type: array
          items:
            type: object
            required:
              - fileId
            properties:
              fileId:
                type: string
                description: File name.
                example: "qitmf-v5.11.json"
              publish:
                description: Flag, publish the source file or not.
                type: boolean
                default: true
              labels:
                description: List of file labels.
                type: array
                items:
                  type: string
                example: ["TMF"]
              blobId:
                description: Git blob ID of the file.
                type: string
                example: a5d45af7
              xApiKind:
                description: Custom x-api-kind parameter.
                type: string
                example: "no-BWC"
        refs:
          description: |
            Detailed data about referenced versions for current package version.
            Required in no Files are provided.
          type: array
          items:
            type: object
            required:
              - refId
              - version
              - type
            properties:
              refId:
                description: Referenced package Id.
                type: string
                example: "QS.CloudQSS.CPQ.CORE"
              version:
                description: Referenced package version number.
                type: string
                example: "2022.2@5"
    ExportVersionBuildConfig:
      description: Build config for export of version.
      type: object
      required:
        - buildType
        - packageId
        - version
        - format
      properties:
        buildType:
          description: Type of the build process.
          type: string
          enum:
            - exportVersion
        packageId:
          description: Package unique identifier (full alias) of package with kind = package.
          type: string
          example: NC.CBSS.CPQ.TMF
        version:
          description: |
            Package version.\
            The mask <version>@<revision> will be used for return in a
            specific revision.
          type: string
          example: 2022.3@3
        format:
          description: | 
            File format for export.\
            * format = html: the export result includes a ZIP file containing interactive HTML for OpenAPI documents (i.e., those with types openapi-3-1, openapi-3-0, or openapi-2-0) and raw files for all other document types.
            * format = yaml/json: the export result includes a ZIP file containing OpenAPI documents in yaml/json format accordingly, and raw files for all other document types.
          type: string
          enum:
            - yaml
            - json
            - html
        allowedOasExtensions:
          description: |
            List of OAS extensions that shall be preserverd when user
            exports OpenAPI specification(s) with remove OAS
            extensions options:
              * If allowedOasExtensions is empty array, then this means
            OAS extensions shall be removed, but there is no allowed
            OAS exntesions, i.e. all OAS extensions shall be removed.
              * If allowedOasExtensions is undefined, then this means
            that OAS extensions shall **not** be removed (i.e.
            removeOasExtensions = false).
              * If allowedOasExtensions has some value(s), then this
            means that OAS extensions shall be removed except for the
            provided value(s) of allowed OAS extension(s).
          type: array
          uniqueItems: true
          items:
            type: string
            pattern: ^x-
          example:
            - x-internal-info
            - x-design-details
    ExportRestDocumentBuildConfig:
      description: Build config for export of one OpenAPI document.
      type: object
      required:
        - buildType
        - packageId
        - version
        - documentId
        - format
      properties:
        buildType:
          description: Type of the build process.
          type: string
          enum:
            - exportRestDocument
        packageId:
          description: Package unique identifier (full alias).
          type: string
          example: NC.CBSS.CPQ.TMF
        version:
          description: |
            Package version.\
            The mask <version>@<revision> will be used for return in a
            specific revision.
          type: string
          example: 2022.3@3
        documentId: 
          description: Unique string identifier of document to export. Type of this document must be openapi-3-1 / openapi-3-0 / openapi-2-0.
          type: string
          pattern: "^[a-z0-9-]"
          example: "qitmf-v5-11-json"
        format:
          type: string
          enum:
            - yaml
            - json
            - html
        allowedOasExtensions:
          description: |
            List of OAS extensions that shall be preserverd when user
            exports OpenAPI specification(s) with remove OAS
            extensions options:
              * If allowedOasExtensions is empty array, then this means
            OAS extensions shall be removed, but there is no allowed
            OAS exntesions, i.e. all OAS extensions shall be removed.
              * If allowedOasExtensions is undefined, then this means
            that OAS extensions shall **not** be removed (i.e.
            removeOasExtensions = false).
              * If allowedOasExtensions has some value(s), then this
            means that OAS extensions shall be removed except for the
            provided value(s) of allowed OAS extension(s).
          type: array
          uniqueItems: true
          items:
            type: string
            pattern: ^x-
          example:
            - x-internal-info
            - x-design-details
    ExportRestOperationsGroupBuildConfig:
      description: Build config for export of REST operations group.
      type: object
      required:
        - buildType
        - packageId
        - version
        - groupName
        - operationsSpecTransformation
        - format
      properties:
        buildType:
          description: Type of the build process.
          type: string
          enum:
            - exportRestOperationsGroup        
        packageId:
          description: Package unique identifier (full alias).
          type: string
          example: NC.CBSS.CPQ.TMF
        version:
          description: |
            Package version.\
            The mask <version>@<revision> will be used for return in a
            specific revision.
          type: string
          example: 2022.3@3
        groupName:
          description: Name of the group
          type: string
          example: v1
        operationsSpecTransformation:
          description: >
            Type of OpeanAPI specification tranformation. Available options are:
              - **reducedSourceSpecifications** - proccess that finds source specifications for all operations from operation group and removes from these specifications operations other than those that are included into operation group.
              - **mergedSpecification** - process the merges all operations from an operation group into one specification.
          type: string
          enum:
            - reducedSourceSpecifications
            - mergedSpecification
        format:
          type: string
          description: | 
            Format of the exported file.\
            If operationsSpecTransformation = reducedSourceSpecifications, then export result includes a ZIP file containing files in selected format.\ 
            If operationsSpecTransformation = mergedSpecification:
              * if format = html, then export result is a ZIP file containing interactive HTML for OpenAPI document.
              * if format = yaml/json, then export result is one OpenAPI file in the appropriate format.
          enum:
            - yaml
            - json
            - html
        allowedOasExtensions:
          description: |
            List of OAS extensions that shall be preserverd when user
            exports OpenAPI specification(s) with remove OAS
            extensions options:
              * If allowedOasExtensions is empty array, then this means
            OAS extensions shall be removed, but there is no allowed
            OAS exntesions, i.e. all OAS extensions shall be removed.
              * If allowedOasExtensions is undefined, then this means
            that OAS extensions shall **not** be removed (i.e.
            removeOasExtensions = false).
              * If allowedOasExtensions has some value(s), then this
            means that OAS extensions shall be removed except for the
            provided value(s) of allowed OAS extension(s).
          type: array
          uniqueItems: true
          items:
            type: string
            pattern: ^x-
          example:
            - x-internal-info
            - x-design-details
    VersionStatusEnum:
      description: Package version status
      type: string
      enum:
        - draft
        - release
        - archived
    BusinessMetric:
      description: Business metric
      title: BusinessMetric
      required:
        - packageId
        - date
        - metric
        - value
      type: object
      properties:
        packageId:
          description: Package unique string identifier
          type: string
        date:
          description: Date on which business metric was collected.
          type: string
          format: date
          example: '2023-12-31'
        username:
          description: Name of the user that has been counted for a specific metric.
          type: string
        metric:
          description: Name of business metric.
          type: string
          example: comparisons_called
        value:
          description: Value associated with business metric.
          type: integer
    BuildResult:
      description: |
        Result of build operation in ZIP archive.
          - The archive can contain folders with sources, builded documents and JSON operation files. 
          - In addition, several config files are provided. The structure of these files is described in buildResult schema.
        There are following build types:
          - build - build process for version publication. It consist of contract and operations build and validation, calculation of the changelog, creation of the final version of the published contracts.
          - changelog - only the changelog calculation, no API contracts version will be created. Both version and previousVersion fields *must* contain @<revision> suffix when using changelog buildType.
          - reducedSourceSpecifications - proccess that finds source specifications for all operations from operation group and removes from these specifications operations other than those that are included into operation group.
          - mergedSpecification - process the merges all operations from an operation group into one specification.
          - exportVersion - process of exporting all documents from the package version.
          - exportRestDocument - process of exporting one OpenAPI document form the version.
          - exportRestOperationsGroup - process of exporting one operations group with apiType = rest.
        There are no any config files in buid result archive for exportVersion/exportRestDocument/exportRestOperationsGroup build types, i.e. only the resulting build files will be in the archive.
      title: Build result
      oneOf:
        - title: Build result for build
          description: Build result for buildType = build
          type: object
          required: 
            - info.json
            - documents.json
          properties:
            info.json:
              description: |
                Build configuration, published version details.
              type: object
              required:
                - packageId
                - version
                - buildType
              properties:
                packageId:
                  description: Package unique string identifier (full alias).
                  type: string
                  example: "QS.CloudQSS.CPQ.Q-TMF"
                version:
                  description: Version name for publication.
                  type: string
                  example: "2022.3"
                previousVersion:
                  description: |
                    Name of the previous published version.
                    The mask <version>@<revision> may be used to return the revision number.
                  type: string
                  example: "2022.2@4"
                  default: ""
                previousVersionPackageId:
                  description: Previous release version package id.
                  type: string
                  example: "QS.CloudQSS.CPQ.Q-TMF"
                buildType:
                  description: |
                    Type of the build process.
                    - **build** - Standard build process.Consist of contract and operations build and validation, calculation of the changelog, creation of the final version of the published contracts.
                  type: string
                  enum:
                    - build
                buildId:
                  description: Id of the build.
                  type: string
                validationRulesSeverity:
                  type: object
                  description: Configuration for validation rules severity levels          
                  readOnly: true
                  properties:
                    brokenRefs:
                      type: string
                      enum:
                        - "error"
                        - "warning"
                      default: "warning"
                      description: Severity level for broken references validation
                builderVersion:
                  type: string
                  description: Version of the builder with which build was made.
                createdBy:
                  type: string
                  description: The user who started the build process.
                metadata:
                  description: Common publish metadata.
                  type: object
                  properties:
                    commitId:
                      description: Last Git commit ID of the version.
                      type: string
                      example: a5d45af7
                    repositoryUrl:
                      description: Url of the Git repository.
                      type: string
                      format: URI
                      example: 'https://<git_group_link>/apihub-registry'
                    labels:
                      description: List of version labels.
                      type: array
                      items:
                        type: string
                      example: ["TMF"]
                    cloudName:
                      description: Name of the cloud for publication from Agent.
                      type: string
                      example: 'k8s-apps2'
                    cloudUrl:
                      description: Full address of the cloud from Agent.
                      type: string
                      format: URI
                      example: "https://k8s-apps2.k8s.sdntest.qubership.org"
                    namespace:
                      description: Namespace of Agent's publication.
                      type: string
                      example: "cloudQSS-release2"
                refs:
                  description:  |
                    Detailed data about referenced versions for current package version.
                  type: array
                  items:
                    type: object
                    required:
                      - refId
                      - version
                      - type
                    properties:
                      refId:
                        description: Referenced package Id.
                        type: string
                        example: "QS.CloudQSS.CPQ.CORE"
                      version:
                        description: Referenced package version number.
                        type: string
                        example: "2022.3@5"
                      parentRefId:
                        description: Referenced parent package Id.
                        type: string
                        example: "QS.CloudQSS.CPQ.CORE"
                      parentVersion:
                        description:  |
                          Referenced parent version.
                          The mask <version>@<revision> may be used to link with a specific revision.
                          If the @revision is not provided, the latest version's revision will be used.
                        type: string
                        example: "2022.2@4"
                      excluded:
                        description: All excluded refs will be ignored (but will still be visible for package version).
                        type: boolean
            documents.json:
              type: object
              description: List of documents data.
              properties:
                documents:
                  type: array
                  items:
                    description: List of builded files.
                    type: object
                    required:
                      - fileId
                      - slug
                      - title
                      - format
                      - type
                      - operations
                    properties:
                      fileId:
                        type: string
                        description: File name with folders.
                        example: "docs/qitmf-v5.11.json"
                      fileName:
                        type: string
                        description: File name (slug+extension).
                        example: "qitmf-v5.11.json"
                      slug:
                        description: Published file slug.
                        type: string
                        pattern: "^[a-z0-9-]"
                        example: "qitmf-v5-11-json"
                      type:
                        $ref: "#/components/schemas/SpecificationType"
                      format:
                        $ref: "#/components/schemas/DocumentFormat"
                      title:
                        description: Document title and summary.
                        type: string
                      description:
                        description: Document description.
                        type: string
                      version:
                        description: Document version. For openapi document, version is taken from info object.
                        type: string
                        example: "1.0.1"
                      operationIds:
                        description: List of operation IDs.
                        type: array
                        items:
                          type: string
                        example: ["get-quoteManagement-v5-quote"]
                      metadata:
                        description: Meta parameters from config file.
                        type: object
                        properties:
                          info:
                            description: Info object from openapi document
                            type: object
                          externalDocs:
                            description: External documentation object from openapi document
                            type: object
                          labels:
                            description: List of file labels.
                            type: array
                            items:
                              type: string
                            example: ["TMF"]
                          blobId:
                            description: Git blob ID of the file.
                            type: string
                            example: a5d84af7
                          tags:
                            type: object
                            properties:
                              name:
                                type: string
                              description:
                                type: string
                              externalDocs:
                                type: object
                                properties:
                                  description:
                                    type: string
                                  url:
                                    type: string
            comparisons.json:
              type: object
              properties:
                comparisons:
                  type: array
                  items:
                    type: object
                    required:
                      - operationTypes
                    properties:
                      comparisonFileId:
                        type: string
                        description: Pointer to the file with changes. Optional, required only if package contains documents. Not required in case of refs only (dashboard).
                        example: "comparisonFile1.json"
                      packageId:
                        description: Package unique string identifier (full alias).
                        type: string
                        example: "QS.CloudQSS.CPQ.Q-TMF"
                      version:
                        description: Version name for publication.
                        type: string
                        example: "2022.3"
                      revision:
                        type: number
                      previousVersion:
                        description: |
                          Name of the previous published version.
                        type: string
                        example: "2022.2"
                        default: ""
                      previousVersionPackageId:
                        description: Previous release version package id.
                        type: string
                        example: "QS.CloudQSS.CPQ.Q-TMF"
                      previousVersionRevision:
                        type: number
                      operationTypes:
                        type: array
                        items:
                          type: object
                          properties:
                            apiType:
                              type: string
                            changesSummary:
                              $ref: "#/components/schemas/ChangeSummary"
                            numberOfImpactedOperations:
                              allOf:
                                - $ref: '#/components/schemas/ChangeSummary'
                                - type: object
                                  description: Number of operations impacted by each severety type.
                            apiAudienceTransitions:
                                  type: array
                                  description: Shows transitions of operations' apiAudience value (compared to the previous release version) and number of operations in which this transition occurred. The array contains only records of transitions that actually occurred in operations.
                                  items:
                                    type: object
                                    properties:
                                      currentAudience:
                                        type: string
                                        description: Current apiAudience value (currentAudience must not be equal to previousAudience) 
                                        enum:
                                          - internal
                                          - external
                                          - unknown
                                      previousAudience:
                                        type: string
                                        description: Previous apiAudience value
                                        enum:
                                          - internal
                                          - external
                                          - unknown
                                      operationsCount:
                                        type: number
                                        description: Number of operations in which the apiAudience was changed from previousAudience to currentAudience
                            tags:
                              type: array
                              items:
                                type: string
                              example:
                                ["a", "b"]
                      fromCache:
                        description: True if the changes were retrieved from BE (not calculated)
                        type: boolean
            comparisons/{comparisonFileId}:
              type: object
              description: List of changes data.
              properties:
                operations:
                  description: Collection of changes depend on apiType.
                  type: array
                  items:
                    type: object
                    required:
                      - changes
                      - changesSummary
                    properties:
                      operationId:
                        description: >-
                          Operation unique identifier (not the same as operationId tag from the OpenAPI file).\
                          Parameter is required if operation was added or modified.
                        type: string
                        example: get-quoteManagement-v5-quote-quoteId
                      previousOperationId:
                        description: >-
                          Operation unique identifier from previous version (not the same as operationId tag from the OpenAPI file).\
                          Parameter is required if operation was deleted or modified.
                        type: string
                        example: get-quoteManagement-v5-quote-id
                      dataHash:
                        description: Operation hash.
                        type: string
                        example: sdfsdfsf242
                      previousDataHash:
                        description: Hash of the previous published version operation.
                        type: string
                        example: sdfsdfsf24dds2
                      changeSummary:
                        $ref: "#/components/schemas/ChangeSummary"
                      changes:
                        description: Collection of changes for each operation.
                        type: array
                        items:
                          $ref: "#/components/schemas/SingleOperationChange"
            operations.json:
              description: List of operations for publish.
              type: object
              properties:
                operations:
                  type: array
                  items:
                    allOf:
                      - $ref: "#/components/schemas/Operation"
                      - type: object
                        required:
                          - data
                          - metadata
                          - searchScopes
                        properties:
                          models:
                            description: Map<name:string, hash:string> of operation models
                            type: object
                            additionalProperties:
                              type: string
                              example:
                                Template: a6b1596abe745a4a0cd3de25a411dbe671a3ba7c
                                ErrorResponse: cf1d87cf3895af106a3ad29f2098dcc2cc477e71
                                CreateItemDto: 72bfdc14758213e5c09620b29054da86b75d4868
                          deprecatedInfo:
                            description: |
                              Additional information about deprecated operation:
                              * for REST API it is value of 'x-deprecated-meta' extension (value of extension must be string), which is defined for deprecated operation. 
                              * for GraphQL API it is value of 'reason' argument of @deprecated directive, which is defined for deprecated operation.
                            type: string
                          deprecatedInPreviousVersions:
                            description: List of previous release versions where operation was also deprecated
                            type: array
                            items:
                              type: string
                            example: ["2022.2", "2022,1", "2021.4"]
                          deprecatedItems:
                            $ref: "#/components/schemas/DeprecatedItems"
                          metadata:
                            description: Metadata content depend on apiType.
                            oneOf:
                              - $ref: "#/components/schemas/RestOperationMeta"
                              - $ref: "#/components/schemas/GraphQLOperationMeta"
                              - $ref: "#/components/schemas/ProtobufOperationMeta"
                          searchScopes:
                            description: Scopes for search indexes.
                            type: object
                            additionalProperties:
                              type: string
                            example:
                              all: "Quote Snapshot V6 Performs full text search ofQuotes Statistics By Phrase fullTextSearchStatistics searchPhrase offset int32 limit int32 fields 200 OK application/json quote anonymousCustomerData assignTo The name of the user/team to whom the Quote is assigned cancellationReason The entity that represents common information about a customer's request cancellationReasonDescription The reason (from the free text field) why the Quote has been cancelled contactMedium A list of contact mediums (ContactMedium [*]). Indicates the contact medium that could be used to contact the party deliveryMethod Id of the Delivery Method (from the Delivery Method list) for Quote description Description of the Quote extendedParameters additionalProperties The attribute contains additional parameters of the Quote The attribute contains additional parameters of the Quote Map<String,List<String>> The attribute contains additional parameters of the Quote externalRefs Represents a reference to an external object id Unique identifier of the Quote name Quote name quoteDate Date and time when the Quote was created date-time quoteTotalPrice Represents Quote total price relatedParty A list of related party references (RelatedPartyRef [*]).A related party defines party or party role linked to a specific entity relatedQuote A list of related quotes (RelatedQuote [*]). It represents another revision of the in-flight Quote from the same chain, i.e. in-flight Quote with the same initialBaselineQuoteId value. This class is returned in the API response only in case of enhancedListQuotes API operation is called. It can be empty if there are no other in-flight Quotes in this chain revision Attribute is used to mark in-flight Quote. Increased in case changes are done to the Quote after submission int32 state State of the Quote updatedWhen Date and time when the Quote was updated date-time validFor Quote with reduced scope of attributes quoteItemStatistic Shows the number of Quote's root Quote Items grouped by some criteria(e.g. by Product Offering, Action) action Numbers of root Quote Items grouped by Action count Number of Quote Items for the specific value int32 name Action name Shows the number of Customer's Product Instances for specified criteria (e.g. Product Family, Billing Account and so on) productFamilyId Unique identifier of Product Family productFamilyName Product family name. Name is returned in the default locale. If alternative locale is passed in Accept-language header in the API request the system returns corresponding localized name in the response. productOfferingId Unique identifier of Product Offering productOfferingName Product offering name. Attribute is returned in the response for catalog entities only (product offering). Name is returned in the default locale. If alternative locale is passed in Accept-language header in the API request the system returns corresponding localized name in the response Shows the number of Quote's root Quote Items grouped by some criteria(e.g. by Product Offering, Action) Shows the Quote with a number of root Quote Items 4XX default response application/json;charset=UTF-8;model=errorResponse;version=1 5XX default response application/json;charset=UTF-8;model=errorResponse;version=1 "    
        - title: Build result for changelog
          description: Build result for buildType = changelog
          type: object
          required: 
            - info.json
          properties:
            info.json:
              description: |
                Build configuration, published version details.
              type: object
              required:
                - packageId
                - version
                - buildType
              properties:
                packageId:
                  description: Package unique string identifier (full alias).
                  type: string
                  example: "QS.CloudQSS.CPQ.Q-TMF"
                version:
                  description: Version name for publication.
                  type: string
                  example: "2022.3"
                previousVersion:
                  description: |
                    Name of the previous published version.
                    The mask <version>@<revision> may be used to return the revision number.
                  type: string
                  example: "2022.2@4"
                  default: ""
                previousVersionPackageId:
                  description: Previous release version package id.
                  type: string
                  example: "QS.CloudQSS.CPQ.Q-TMF"
                buildType:
                  description: |
                    Type of the build process.
                    - **changelog** - only the changelog calculation, no API contracts version will be created. Both version and previousVersion fields *must* contain @<revision> suffix when using changelog buildType.
                  type: string
                  enum:
                    - changelog
                buildId:
                  description: Id of the build.
                  type: string
                builderVersion:
                  type: string
                  description: Version of the builder with which build was made.
                createdBy:
                  type: string
                  description: The user who started the build process.
                metadata:
                  description: Common publish metadata.
                  type: object
                  properties:
                    commitId:
                      description: Last Git commit ID of the version.
                      type: string
                      example: a5d45af7
                    repositoryUrl:
                      description: Url of the Git repository.
                      type: string
                      format: URI
                      example: 'https://<git_group_link>/apihub-registry'
                    labels:
                      description: List of version labels.
                      type: array
                      items:
                        type: string
                      example: ["TMF"]
                    cloudName:
                      description: Name of the cloud for publication from Agent.
                      type: string
                      example: 'k8s-apps2'
                    cloudUrl:
                      description: Full address of the cloud from Agent.
                      type: string
                      format: URI
                      example: "https://k8s-apps2.k8s.sdntest.qubership.org"
                    namespace:
                      description: Namespace of Agent's publication.
                      type: string
                      example: "cloudQSS-release2"
            comparisons.json:
              type: object
              properties:
                comparisons:
                  type: array
                  items:
                    type: object
                    required:
                      - operationTypes
                    properties:
                      comparisonFileId:
                        type: string
                        description: Pointer to the file with changes. Optional, required only if package contains documents. Not required in case of refs only (dashboard).
                        example: "comparisonFile1.json"
                      packageId:
                        description: Package unique string identifier (full alias).
                        type: string
                        example: "QS.CloudQSS.CPQ.Q-TMF"
                      version:
                        description: Version name for publication.
                        type: string
                        example: "2022.3"
                      revision:
                        type: number
                      previousVersion:
                        description: |
                          Name of the previous published version.
                        type: string
                        example: "2022.2"
                        default: ""
                      previousVersionPackageId:
                        description: Previous release version package id.
                        type: string
                        example: "QS.CloudQSS.CPQ.Q-TMF"
                      previousVersionRevision:
                        type: number
                      operationTypes:
                        type: array
                        items:
                          type: object
                          properties:
                            apiType:
                              type: string
                            changesSummary:
                              $ref: "#/components/schemas/ChangeSummary"
                            numberOfImpactedOperations:
                              allOf:
                                - $ref: '#/components/schemas/ChangeSummary'
                                - type: object
                                  description: Number of operations impacted by each severety type.
                            apiAudienceTransitions:
                                  type: array
                                  description: Shows transitions of operations' apiAudience value (compared to the previous release version) and number of operations in which this transition occurred. The array contains only records of transitions that actually occurred in operations.
                                  items:
                                    type: object
                                    properties:
                                      currentAudience:
                                        type: string
                                        description: Current apiAudience value (currentAudience must not be equal to previousAudience) 
                                        enum:
                                          - internal
                                          - external
                                          - unknown
                                      previousAudience:
                                        type: string
                                        description: Previous apiAudience value
                                        enum:
                                          - internal
                                          - external
                                          - unknown
                                      operationsCount:
                                        type: number
                                        description: Number of operations in which the apiAudience was changed from previousAudience to currentAudience
                            tags:
                              type: array
                              items:
                                type: string
                              example:
                                ["a", "b"]
                      fromCache:
                        description: True if the changes were retrieved from BE (not calculated)
                        type: boolean
            comparisons/{comparisonFileId}:
              type: object
              description: List of changed data.
              properties:
                operations:
                  description: Collection of changes depend on apiType.
                  type: array
                  items:
                    type: object
                    required:
                      - operationId
                      - changes
                      - changesSummary
                    properties:
                      operationId:
                        description: >-
                          Operation unique identifier (slug). Not the same as
                          operationId tag from the OpenAPI file.
                        type: string
                        example: get-quoteManagement-v5-quote
                      dataHash:
                        description: Operation hash.
                        type: string
                        example: sdfsdfsf242
                      previousDataHash:
                        description: Hash of the previous published version operation.
                        type: string
                        example: sdfsdfsf24dds2
                      changeSummary:
                        $ref: "#/components/schemas/ChangeSummary"
                      changes:
                        description: Collection of changes for each operation.
                        type: array
                        items:
                          $ref: "#/components/schemas/SingleOperationChange"
        - title: Build result for mergedSpecification and reducedSourceSpecifications
          description: |
            Build result for the following buildType:
              - mergedSpecification
              - reducedSourceSpecifications
          type: object
          required: 
            - info.json
          properties:
            info.json:
              description: |
                Build configuration, published version details.
              type: object
              required:
                - packageId
                - version
                - buildType
              properties:
                packageId:
                  description: Package unique string identifier (full alias).
                  type: string
                  example: "QS.CloudQSS.CPQ.Q-TMF"
                version:
                  description: Version name for publication.
                  type: string
                  example: "2022.3"
                buildId:
                  description: Id of the build.
                  type: string
                builderVersion:
                  type: string
                  description: Version of the builder with which build was made.
                format:
                  description: Should be specified if buildType equal to mergedSpecification or reducedSourceSpecifications
                  type: string
                  enum:
                    - yaml
                    - json
                    - html
                  default: json
                apiType:
                  description: Document transformation is available only for apiType = REST
                  type: string
                  enum:
                    - rest
                groupName:
                  description: Name of the group
                  type: string
                  example: v1
                buildType:
                  description: |
                    Type of the build process for OpeanAPI specification tranformation. Available options are:
                    - **reducedSourceSpecifications** - proccess that finds source specifications for all operations from operation group and removes from these specifications operations other than those that are included into operation group.
                    - **mergedSpecification** - process the merges all operations from an operation group into one specification.
                  type: string
                  enum:
                    - reducedSourceSpecifications
                    - mergedSpecification
                createdBy:
                  description: The user who started the build process.
                  type: string
            documents.json:
              type: object
              description: List of documents data.
              properties:
                documents:
                  type: array
                  items:
                    description: List of builded files.
                    type: object
                    required:
                      - fileId
                      - slug
                      - title
                      - format
                      - type
                      - operations
                    properties:
                      fileId:
                        type: string
                        description: File name with folders.
                        example: "docs/qitmf-v5.11.json"
                      fileName:
                        type: string
                        description: File name (slug+extension).
                        example: "qitmf-v5.11.json"
                      slug:
                        description: Published file slug.
                        type: string
                        pattern: "^[a-z0-9-]"
                        example: "qitmf-v5-11-json"
                      type:
                        $ref: "#/components/schemas/SpecificationType"
                      format:
                        $ref: "#/components/schemas/DocumentFormat"
                      title:
                        description: Document title and summary.
                        type: string
                      description:
                        description: Document description.
                        type: string
                      version:
                        description: Document version. For openapi document, version is taken from info object.
                        type: string
                        example: "1.0.1"
                      operationIds:
                        description: List of operation IDs.
                        type: array
                        items:
                          type: string
                        example: ["get-quoteManagement-v5-quote"]
      discriminator:
        propertyName: buildType
    SpecificationType:
      title: type
      description: Type of the specification notation.
      type: string
      enum:
        - openapi-3-1
        - openapi-3-0
        - openapi-2-0
        - json-schema
        - markdown
        - graphql-schema
        - graphapi
        - introspection
        - protobuf-3
        - unknown
    DocumentFormat:
      title: format
      description: Format of the specification document.
      type: string
      enum:
        - json
        - yaml
        - md
        - graphql
        - gql
        - proto
        - unknown
    ChangeSummary:
      description: |
        Numbers of changes between the current and previous published version.
      type: object
      properties:
        breaking:
          description: Number of changes, breaking the backward compatibility.
          type: integer
          default: 0
        semi-breaking:
          description: Number of changes, breaking the backward compatibility in a legal way. For example, deleting correctly deprecated endpoint.
          type: integer
          default: 0
        deprecated:
          description: Number of deprecated endpoints.
          type: integer
          default: 0
        non-breaking:
          description: Number of non-breaking changes.
          type: integer
          default: 0
        annotation:
          description: Number of annotation changes.
          type: integer
          default: 0
        unclassified:
          description: Number of unclassified changes.
          type: integer
          default: 0
    SingleOperationChange:
      allOf:
        - type: object
          description: Discrepancy data in a single operation.
          properties:
            description:
              description: >-
                Human-readable description of point of change.
              type: string
              example: "[Added] Property: summary."
            severity:
              $ref: "#/components/schemas/ChangeSeverity"
            scope:
              type: string
              description: |
                Part of operation (like request/response) where change was made. Scope differs for apiTypes.\
                Scope is needed to correctly identify severity of change, because the same change can have different severity in request/response.
            action:
              description: Action, what was done with the endpoint.
              type: string
              enum:
                - add
                - remove
                - replace
                - rename
        - oneOf:
          - $ref: "#/components/schemas/ChangeAdd"
          - $ref: "#/components/schemas/ChangeRemove"
          - $ref: "#/components/schemas/ChangeReplace"
          - $ref: "#/components/schemas/ChangeRename"
    ChangeAdd:
      type: object
      description: Data of single operation change when change action = add
      properties:
        currentDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        currentValueHash:
          type: string
          description: |
            Hash of the added entity.\
            Hash is needed to identify that the same enitity was changed in other operations, that allows calculating declarative number of changes in package version.
    ChangeRemove:
      type: object
      description: Data of single operation change when change action = remove.
      properties:
        previousDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        previousValueHash:
          type: string
          description: |
            Hash of the removed entity.\
            Hash is needed to identify that the same enitity was changed in other operations, that allows calculating declarative number of changes in package version.
    ChangeReplace:
      type: object
      description: Data of single operation change when change action = replace
      properties:
        currentDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        previousDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        previousValueHash:
          type: string
          description: |
            Previous hash of the changed entity.\
            Hash is needed to identify that the same enitity was changed in other operations, that allows calculating declarative number of changes in package version.
        currentValueHash:
          type: string
          description: |
            Current hash of the changed entity.\
            Hash is needed to identify that the same enitity was changed in other operations, that allows calculating declarative number of changes in package version.
    ChangeRename:
      type: object
      description: Data of single operation change when change action = rename.
      properties:
        currentDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        previousDeclarationJsonPaths:
          description: |
            (below, a document is not considered to be an original document, but a document with one specific operation)\
            When comparing two documents (origin and changed; difference from changed document apended to the original document), a declarative jsonPath is calculated for each change.
          type: array
          items:
            type: array
            items:
              anyOf:
               - type: string
               - type: integer
          example: [["components/schemas/Cat/minProperties", "components/schemas/Dog/minProperties"],["/quoteManagement/v5/quote"]]
        previousKey:
          type: string
          description: Previous key (name) of the renamed entity.
        currentKey:
          type: string
          description: Current key (name) of the renamed entity.
    Operation:
      description: Operation object
      title: Operation
      type: object
      required:
        - operationId
        - title
        - apiType
        - dataHash
        - apiAudience
        - apiKind
      properties:
        operationId:
          description: Operation unique identifier (slug). Not the same as operationId tag from the OpenAPI file.
          type: string
          example: get-quoteManagement-v5-quote
        title:
          description: Operation summary/title.
          type: string
        apiType:
        #  description: Type of the API.
        #  type: string
        #  enum:
        #    - rest
        #    - kafka
        #    - grpc
        #    - graphql
        #    - protobuf
          $ref: "#/components/schemas/ApiType"
        dataHash:
          description: Operation hash.
          type: string
          example: sdfsdfsf242
        externalMetadata:
          description: External operation metadata.
          type: object
        deprecated:
          description: Operation deprecate flag.
          type: boolean
          default: false
        apiAudience:
          description: |
            Operation's target audience.
            * internal - APIs are available for integration within product application.
            * external - APIs exposed outside the boundary of product application: solution delivery integrations, 3rd party integrations, customer integrations.
            * unknown - If any value other than internal or external is used, the API is considered as unknown.
          type: string
          enum:
            - internal
            - external
            - unknown
        apiKind:
          description: |
            Operation API kind.
            * bwc - API with backward compatibility support (a.k.a. public).
            * no-bwc - API without backward compatibility support (a.k.a. internal).
            * experimental - APIs for feature testing. Usage is not recommended.
          type: string
          enum:
            - bwc
            - no-bwc
            - experimental
          default: bwc
        tags:
          description: |
            List of operation tags.
            * in rest, tag is OpenAPI tag.
            * in graphql, tag is root schema type - query, mutation, subscription.
            * in protobuf, tag is service of method.
          type: array
          items:
            type: string
          example: ["RestControllerV5"]
    ApiType:
      title: apiType
      type: string
      enum:
        - rest
        - graphql
        - protobuf
    DeprecatedItems:
      description: List of deprecated items in the operation.
      type: array
      items:
        type: object
        properties:
          deprecatedInPreviousVersions:
            description: List of previous release versions where item was also deprecated
            type: array
            items:
              type: string
            example: [ "2022.2", "2022,1", "2021.4" ]
          declarationJsonPaths:
            description: Declarative path to deprecated item.
            type: array
            items:
              type: array
              items:
                anyOf:
                - type: string
                - type: integer
            example: [["paths", "/post/saml/", "test", 1], ["paths", "/post/saml/", "test", 22]]
          description:
            description: Human-readable description of deprecated item.
            type: string
            example: "[Deprecated] query parameter 'petId'"
          deprecatedInfo:
            description: |
              Additional information about single deprecated item:
              * for REST API it is value of 'x-deprecated-meta' extension (value of extension must be string), which is defined for deprecated item.
              * for GraphQL API it is value of 'reason' argument of @deprecated directive.
            type: string
          tolerantHash:
            description: Tolerant hash for Schema object or Parameter object that has been deprecated. It is needed to identify that the same schema/parameter was deprecated in previous version.
            type: string
          hash:
            description: Hash (full) for Schema object or Parameter object that has been deprecated, it is needed to detect semi-breaking changes in UI.
            type: string
    RestOperationMeta:
      description: Specific parameters for REST operation.
      title: RestOperationMeta
      required:
        - path
        - method
      type: object
      properties:
        path:
          description: Operation endpoint path.
          type: string
          example: "/quoteManagement/v5/quote"
        method:
          description: Operation method.
          type: string
          enum:
            - post
            - get
            - put
            - patch
            - delete
            - head
            - options
            - connect
            - trace
        title:
          description: Operation summary/title.
          type: string
        customTags:
          description: Custom tags.
          type: object
    GraphQLOperationMeta:
      description: Specific parameters for GraphQL operation.
      title: GraphQLOperationMeta
      required:
        - type
        - method
      type: object
      properties:
        type:
          description: Operation type
          type: string
          enum:
            - query
            - mutation
            - subscription
        method:
          description: GraphQL operation method.
          type: string
          example: getPaymentMethodSpecificationCore
        title:
          description: Operation summary/title.
          type: string
        customTags:
          description: Custom tags.
          type: object
    ProtobufOperationMeta:
      description: Specific parameters for Protobuf operation.
      title: GraphQLOperationMeta
      required:
        - type
        - method
      type: object
      properties:
        type:
          description: Operation type
          type: string
          enum: #open questions what types shall be supported?
            - unary
            - serverStreaming
            - clientStreaming
            - bidirectionalStreaming
        method:
          description: Protobuf method name.
          type: string
          example: ListActionLogItems
        title:
          description: Operation title (same as method name but with adding spaces between capital letters)
          type: string
          example: List Action Log Items
    ChangeSeverity:
      description: Severity of the particular change.
      type: string
      enum:
        - breaking
        - semi-breaking
        - deprecated
        - non-breaking
        - annotation
        - unclassified
    BuildErrors:
      type: object
      properties:
        errors:
          type: string
          description: Build error message.
  examples:
    IncorrectInputParameters:
      description: Incorrect input parameters
      value:
        status: 400
        code: "APIHUB-COMMON-4001"
        message: "Incorrect input parameters"
    InternalServerError:
      description: Default internal server error
      value:
        status: 500
        code: "APIHUB-8000"
        reason: "InternalServerError"
        message: "InternalServerError"
  securitySchemes:
    BearerAuth:
      type: http
      description: Bearer token authentication. Default secutity scheme for API usage.
      scheme: bearer
      bearerFormat: JWT
    CookieAuth:
      type: apiKey
      in: cookie
      name: apihub-access-token
      description: Authentication via the `apihub-access-token` cookie.
    api-key:
      type: apiKey
      description: Api-key authentication.
      name: api-key
      in: header
